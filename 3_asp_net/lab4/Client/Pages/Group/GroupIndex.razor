@page "/Group"
@attribute [Authorize]

@using Lab4.Shared.Domain
@using Lab4.Client.Services
@using Microsoft.AspNetCore.Authorization

@inject GroupService GroupService

<h1 class="display-4">Списки групп</h1>

@if (_Groups != null)
{
    <table class="table table-hover">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">Название</th>
            <th scoep="col">Действия</th>
        </tr>
    </thead>
    <tbody>
        @{
                int i = 1;
            }
            @foreach (var gr in _Groups)
            {
                <tr>
                    <th scope="row">@(i++)</th>
                    <td class="w-100">@gr.name</td>
                    <td nowrap>
                        <a class="btn btn-outline-success" href="Group/@gr.idgroup">Открыть</a> |
                        <a class="btn btn-outline-primary" href="Group/Update/@gr.idgroup">Изменить</a> |
                        <input class="btn btn-danger" type="submit" value="X" @onclick="() => DeleteGroup(gr)">
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <a class="btn btn-success" href="Group/Create">Создать группу</a>
}


@code {
    IEnumerable<GroupModel> _Groups;

    protected override async Task OnInitializedAsync()
    {
        _Groups = await GroupService.GetGroup();
    }

    private async Task DeleteGroup(GroupModel Group)
    {
        await GroupService.DeleteGroup(Group);
        _Groups = await GroupService.GetGroup();
        StateHasChanged();
    }
}