#include "catch.hpp"
#include "realty.h"
#include "realty2.h"

TEST_CASE("Проверка работы методов класса realty", "[realty]")
{
    // -- тестовые методы --
    SECTION("Тестироавние инициализации класса realty")
    {
        realty zero;
        CHECK(zero.toString() == "Контора: \n Дата создания: \n Нет Информации");

        std::string s = "Контора: Neil\n Дата создания: 01012001";
        s += "\n идентификационный номер: 12345678";
        s += "\n количество комнат: 1";
        s += "\n общая площадь: 100.000000";
        s += "\n жилая площадь: 50.000000";
        s += "\n дата постройки дома: 10102010";
        s += "\n запрашиваемая стоимость: 100000.000000";
        s += "\n телефон продавца: 89996014435\n";

        realty r1("01012001", "Neil", {vt(12345678, 1, 100, 50, "10102010", 100000, "89996014435")});
        CHECK(r1.toString() == s);

        list<vt> a {vt(12345678, 1, 100, 50, "10102010", 100000, "89996014435")};
        realty r2("01012001", "Neil", a);
        CHECK(r2.toString() == s);

        CHECK_THROWS
        ( [&]() {
            realty r3("010120010", "Neil", {vt(12345678, 1, 100, 50, "10102010", 100000, "89996014435")});
        } () );
    }
    SECTION("Методы realty")
    {
        vt v0(12345678, 1, 100, 50, "10102010", 100000, "89996014435");
        realty r1("01012001", "Neil", {v0});
        vt v1(12345679, 1, 100, 50, "10102010", 100000, "89996014435");

        r1._add_(v1);
        std::string s = "Контора: Neil\n Дата создания: 01012001";
        s += "\n идентификационный номер: 12345678";
        s += "\n количество комнат: 1";
        s += "\n общая площадь: 100.000000";
        s += "\n жилая площадь: 50.000000";
        s += "\n дата постройки дома: 10102010";
        s += "\n запрашиваемая стоимость: 100000.000000";
        s += "\n телефон продавца: 89996014435\n";
        s += "\n идентификационный номер: 12345679";
        s += "\n количество комнат: 1";
        s += "\n общая площадь: 100.000000";
        s += "\n жилая площадь: 50.000000";
        s += "\n дата постройки дома: 10102010";
        s += "\n запрашиваемая стоимость: 100000.000000";
        s += "\n телефон продавца: 89996014435\n";
        CHECK(r1.toString() == s);

        r1._delete_(0);
        s = "Контора: Neil\n Дата создания: 01012001";
        s += "\n идентификационный номер: 12345679";
        s += "\n количество комнат: 1";
        s += "\n общая площадь: 100.000000";
        s += "\n жилая площадь: 50.000000";
        s += "\n дата постройки дома: 10102010";
        s += "\n запрашиваемая стоимость: 100000.000000";
        s += "\n телефон продавца: 89996014435\n";
        CHECK(r1.toString() == s);

        r1._add_(v0);
        s += "\n идентификационный номер: 12345678";
        s += "\n количество комнат: 1";
        s += "\n общая площадь: 100.000000";
        s += "\n жилая площадь: 50.000000";
        s += "\n дата постройки дома: 10102010";
        s += "\n запрашиваемая стоимость: 100000.000000";
        s += "\n телефон продавца: 89996014435\n";
        CHECK(r1.toString() == s);

        vt v2(12345679, 1, 2000, 1000, "20122020", 50000, "89996033333");
        r1._change_(0, v2);
        s = "Контора: Neil\n Дата создания: 01012001";
        s += "\n идентификационный номер: 12345679";
        s += "\n количество комнат: 1";
        s += "\n общая площадь: 2000.000000";
        s += "\n жилая площадь: 1000.000000";
        s += "\n дата постройки дома: 20122020";
        s += "\n запрашиваемая стоимость: 50000.000000";
        s += "\n телефон продавца: 89996033333\n";
        s += "\n идентификационный номер: 12345678";
        s += "\n количество комнат: 1";
        s += "\n общая площадь: 100.000000";
        s += "\n жилая площадь: 50.000000";
        s += "\n дата постройки дома: 10102010";
        s += "\n запрашиваемая стоимость: 100000.000000";
        s += "\n телефон продавца: 89996014435\n";
        CHECK(r1.toString() == s);
    }
    SECTION("генерация случайных realty")
    {
        realty zero;
        CHECK(zero.get_s() == 0);

        zero.rand();
        CHECK(zero.get_s() >= 1);

    }
    SECTION("Методы realty")
    {
        realty zero;
        zero.rand();

        int id = 12345678;
        vt f = zero.find_id(id);
        if (f == vt(0, 0, 0, 0, "", 0, ""))
        {
            zero._change_(zero.get_s()-1, vt(id, 1, 100, 50, "10102010", 100000, "89996014435"));
            f = *zero.TAIL();
        }

        CHECK(realty("", "", {zero.find_id(id)}).toString() == realty("", "", {f}).toString());
        CHECK(realty("", "", {zero.binary_search(id)}).toString() == realty("", "", {f}).toString());
        CHECK(realty("", "", {zero.interpolat_search(id)}).toString() == realty("", "", {f}).toString());

        vt v1(id, 1, 100, 53, "10102011", 100000, "89996014435");
        vt v2(id+1, 1, 101, 52, "10102012", 100000, "89996014435");
        vt v3(id+2, 1, 102, 51, "10102010", 100000, "89996014435");
        vt v4(id+3, 1, 103, 50, "10102013", 100000, "89996014435");

        zero._clear();
        zero._add_(v1);
        zero._add_(v2);
        zero._add_(v3);
        zero._add_(v4);

        CHECK(zero.find_data("10102010").toString() == realty("", "", {v3}).toString());
        CHECK(zero.find_commonS(100).toString() == realty("", "", {v1}).toString());
        CHECK(zero.find_commonS_less(102).toString() == realty("", "", {v1, v2}).toString());
        CHECK(zero.find_commonS_more(102).toString() == realty("", "", {v4}).toString());
        CHECK(zero.find_livingS(50).toString() == realty("", "", {v4}).toString());
        CHECK(zero.find_livingS_less(52).toString() == realty("", "", {v3, v4}).toString());
        CHECK(zero.find_livingS_more(52).toString() == realty("", "", {v1}).toString());
    }
    SECTION("Методы realty")
    {
        realty zero;

        vt v1(12345678, 1, 100, 53, "10102011", 100000, "89996014435");
        vt v2(12345679, 1, 101, 52, "10102012", 100000, "89996014435");
        vt v3(12345680, 1, 102, 51, "10102010", 100000, "89996014435");
        vt v4(12345681, 1, 103, 50, "10102013", 100000, "89996014435");

        zero._add_(v1);
        zero._add_(v2);
        zero._add_(v1);
        zero._add_(v3);
        zero._add_(v1);
        zero._add_(v4);
        zero._add_(v1);

        CHECK(zero.toString() == realty("", "", {v1, v2, v1, v3, v1, v4, v1}).toString());

        zero._delete_repit_();
        CHECK(zero.toString() == realty("", "", {v1, v2, v3, v4}).toString());
    }
}


TEST_CASE("Проверка работы методов класса realty2", "[realty2]")
{
    // -- тестовые методы --
    SECTION("Тестироавние инициализации класса realty2")
    {
        realty2 zero;
        CHECK(zero.toString() == "Контора: \n Дата создания: \n Нет Информации");

        std::string s = "Контора: Neil\n Дата создания: 01012001";
        s += "\n идентификационный номер: 12345678";
        s += "\n количество комнат: 1";
        s += "\n общая площадь: 100.000000";
        s += "\n жилая площадь: 50.000000";
        s += "\n дата постройки дома: 10102010";
        s += "\n запрашиваемая стоимость: 100000.000000";
        s += "\n телефон продавца: 89996014435\n";

        realty2 r1("01012001", "Neil", {vt(12345678, 1, 100, 50, "10102010", 100000, "89996014435")});
        CHECK(r1.toString() == s);

        std::list<value_type> a {value_type(12345678, 1, 100, 50, "10102010", 100000, "89996014435")};
        realty2 r2("01012001", "Neil", a);
        CHECK(r2.toString() == s);

        CHECK_THROWS
        ( [&]() {
            realty2 r3("010120010", "Neil", {vt(12345678, 1, 100, 50, "10102010", 100000, "89996014435")});
        } () );
    }
    SECTION("Методы realty2")
    {
        value_type v0(12345678, 1, 100, 50, "10102010", 100000, "89996014435");
        realty2 r1("01012001", "Neil", {v0});
        value_type v1(12345679, 1, 100, 50, "10102010", 100000, "89996014435");

        r1._add_(v1);
        std::string s = "Контора: Neil\n Дата создания: 01012001";
        s += "\n идентификационный номер: 12345678";
        s += "\n количество комнат: 1";
        s += "\n общая площадь: 100.000000";
        s += "\n жилая площадь: 50.000000";
        s += "\n дата постройки дома: 10102010";
        s += "\n запрашиваемая стоимость: 100000.000000";
        s += "\n телефон продавца: 89996014435\n";
        s += "\n идентификационный номер: 12345679";
        s += "\n количество комнат: 1";
        s += "\n общая площадь: 100.000000";
        s += "\n жилая площадь: 50.000000";
        s += "\n дата постройки дома: 10102010";
        s += "\n запрашиваемая стоимость: 100000.000000";
        s += "\n телефон продавца: 89996014435\n";
        CHECK(r1.toString() == s);

        r1._delete_(0);
        s = "Контора: Neil\n Дата создания: 01012001";
        s += "\n идентификационный номер: 12345679";
        s += "\n количество комнат: 1";
        s += "\n общая площадь: 100.000000";
        s += "\n жилая площадь: 50.000000";
        s += "\n дата постройки дома: 10102010";
        s += "\n запрашиваемая стоимость: 100000.000000";
        s += "\n телефон продавца: 89996014435\n";
        CHECK(r1.toString() == s);

        r1._add_(v0);
        s += "\n идентификационный номер: 12345678";
        s += "\n количество комнат: 1";
        s += "\n общая площадь: 100.000000";
        s += "\n жилая площадь: 50.000000";
        s += "\n дата постройки дома: 10102010";
        s += "\n запрашиваемая стоимость: 100000.000000";
        s += "\n телефон продавца: 89996014435\n";
        CHECK(r1.toString() == s);

        value_type v2(12345679, 1, 2000, 1000, "20122020", 50000, "89996033333");
        r1._change_(0, v2);
        s = "Контора: Neil\n Дата создания: 01012001";
        s += "\n идентификационный номер: 12345679";
        s += "\n количество комнат: 1";
        s += "\n общая площадь: 2000.000000";
        s += "\n жилая площадь: 1000.000000";
        s += "\n дата постройки дома: 20122020";
        s += "\n запрашиваемая стоимость: 50000.000000";
        s += "\n телефон продавца: 89996033333\n";
        s += "\n идентификационный номер: 12345678";
        s += "\n количество комнат: 1";
        s += "\n общая площадь: 100.000000";
        s += "\n жилая площадь: 50.000000";
        s += "\n дата постройки дома: 10102010";
        s += "\n запрашиваемая стоимость: 100000.000000";
        s += "\n телефон продавца: 89996014435\n";
        CHECK(r1.toString() == s);
    }
    SECTION("генерация случайных realty2")
    {
        realty2 zero;
        CHECK(zero.get_s() == 0);

        zero.rand();
        CHECK(zero.get_s() >= 1);

    }
    SECTION("Методы realty2")
    {
        realty2 zero;
        zero.rand();

        int id = 12345678;
        value_type f = zero.find_id(id);
        if (f == value_type(0, 0, 0, 0, "", 0, ""))
        {
            zero._change_(zero.get_s()-1, vt(id, 1, 100, 50, "10102010", 100000, "89996014435"));
            f = *zero.TAIL();
        }

        CHECK(realty2("", "", {zero.find_id(id)}).toString() == realty("", "", {f}).toString());
        CHECK(realty2("", "", {zero.binary_search(id)}).toString() == realty("", "", {f}).toString());
        CHECK(realty2("", "", {zero.interpolat_search(id)}).toString() == realty("", "", {f}).toString());

        value_type v1(id, 1, 100, 53, "10102011", 100000, "89996014435");
        value_type v2(id+1, 1, 101, 52, "10102012", 100000, "89996014435");
        value_type v3(id+2, 1, 102, 51, "10102010", 100000, "89996014435");
        value_type v4(id+3, 1, 103, 50, "10102013", 100000, "89996014435");

        zero._clear();
        zero._add_(v1);
        zero._add_(v2);
        zero._add_(v3);
        zero._add_(v4);

        CHECK(zero.find_data("10102010").toString() == realty2("", "", {v3}).toString());
        CHECK(zero.find_commonS(100).toString() == realty2("", "", {v1}).toString());
        CHECK(zero.find_commonS_less(102).toString() == realty2("", "", {v1, v2}).toString());
        CHECK(zero.find_commonS_more(102).toString() == realty2("", "", {v4}).toString());
        CHECK(zero.find_livingS(50).toString() == realty2("", "", {v4}).toString());
        CHECK(zero.find_livingS_less(52).toString() == realty2("", "", {v3, v4}).toString());
        CHECK(zero.find_livingS_more(52).toString() == realty2("", "", {v1}).toString());
    }
    SECTION("Методы realty2")
    {
        realty2 zero;

        value_type v1(12345678, 1, 100, 53, "10102011", 100000, "89996014435");
        value_type v2(12345679, 1, 101, 52, "10102012", 100000, "89996014435");
        value_type v3(12345680, 1, 102, 51, "10102010", 100000, "89996014435");
        value_type v4(12345681, 1, 103, 50, "10102013", 100000, "89996014435");

        zero._add_(v1);
        zero._add_(v2);
        zero._add_(v1);
        zero._add_(v3);
        zero._add_(v1);
        zero._add_(v4);
        zero._add_(v1);

        CHECK(zero.toString() == realty2("", "", {v1, v2, v1, v3, v1, v4, v1}).toString());

        zero._delete_repit_();
        CHECK(zero.toString() == realty2("", "", {v1, v2, v3, v4}).toString());
    }
}
